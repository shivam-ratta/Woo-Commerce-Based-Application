{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/file-path/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;;;;;;;;;;;;;;;;;;;;;;IAgC1C,4BAAiB;;;;IAC7C;;;;OAIG;;;;;;IAEH,oCAAiB;;;;;cAAC,IAAY;QAC5B,MAAM,CAAC;KACR;;gBAVF,UAAU;;;QAOR,OAAO,EAAE;;;;qDAGT;;;;;;;;;;;;;;;;;;;;;IATU,QAAQ;QARpB,MAAM,CAAC;YACN,UAAU,EAAE,UAAU;YACtB,MAAM,EAAE,yBAAyB;YACjC,SAAS,EAAE,iBAAiB;YAC5B,IAAI,EAAE,sDAAsD;YAC5D,SAAS,EAAE,CAAC,SAAS,CAAC;SACvB,CAAC;OAEW,QAAQ,EAUpB;mBA3CD;EAiC8B,iBAAiB;SAAlC,QAAQ","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\ndeclare const window: any;\n\n/**\n * @name File Path\n * @description\n *\n * This plugin allows you to resolve the native filesystem path for Android content URIs and is based on code in the aFileChooser library.\n *\n * @usage\n * ```typescript\n * import { FilePath } from '@ionic-native/file-path';\n *\n * constructor(private filePath: FilePath) { }\n *\n * ...\n *\n * this.filePath.resolveNativePath(path)\n *   .then(filePath => console.log(filePath))\n *   .catch(err => console.log(err));\n *\n * ```\n */\n@Plugin({\n  pluginName: 'FilePath',\n  plugin: 'cordova-plugin-filepath',\n  pluginRef: 'window.FilePath',\n  repo: 'https://github.com/hiddentao/cordova-plugin-filepath',\n  platforms: ['Android']\n})\n@Injectable()\nexport class FilePath extends IonicNativePlugin {\n  /**\n   * Resolve native path for given content URL/path.\n   * @param {string} path  Content URL/path.\n   * @returns {Promise<string>}\n   */\n  @Cordova()\n  resolveNativePath(path: string): Promise<string> {\n    return;\n  }\n}\n"]}